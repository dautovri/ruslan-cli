name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ['1.21', '1.22']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.21'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Generate coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.21'
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage HTML
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.21'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.21']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Build binary
        run: go build -v -ldflags="-s -w" -o ruslan-cli .

      - name: Test binary execution
        run: ./ruslan-cli --help
        shell: bash

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ruslan-cli-${{ matrix.os }}
          path: ruslan-cli*

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Build binary
        run: make build

      - name: Test CLI commands
        run: |
          # Test version
          ./ruslan-cli --version || echo "Version flag not yet implemented"
          
          # Test help
          ./ruslan-cli --help
          
          # Test env commands
          ./ruslan-cli env list
          ./ruslan-cli env current
          
          # Test completion generation
          ./ruslan-cli completion bash > /dev/null
          ./ruslan-cli completion zsh > /dev/null
          ./ruslan-cli completion fish > /dev/null

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt sarif -out results.sarif ./...'

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
